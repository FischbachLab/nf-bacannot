ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-Length, -ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
arrange(Contig)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Sort results
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
arrange(Contig)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
View(genes)
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.Identifier")
View(genes)
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
View(ncbi_dt)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
arrange(Contig)
# Load datatable
datatable(ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore),
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
arrange(Contig)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
arrange(Strain, Contig)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID, Strain, Contig)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ]
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
arrange(Strain, Contig)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
group_by(Strain) %>%
arrange(Contig)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
group_by(Strain) %>%
sort(Contig)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
group_by(Strain) %>%
arrange(Contig)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
group_by(Strain)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
arrange(Strain)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ]
ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
arrange(Strain, Protein)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_resistance_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ] %>%
arrange(Strain, Protein)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/Plasmids/blast_aln.tsv", comment.char = "#")
colnames(ncbi_dt) <- c("Contig", "Reference", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Sort results
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-Length, -ID)), ]
#ncbi_dt <- ncbi_dt[!duplicated(ncbi_dt$Contig), ] %>%
#  arrange(Contig)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa PlasmidFinder',
options = list(pageLength = 6,
dom='flrtBip',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = TRUE),
extensions = 'Buttons',
rownames = F)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_virulence_genes.tsv")
View(genes)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_resistance_genes.tsv")
View(genes)
# Read genes
genes <- read.csv(sep = "\t", "docs/KpV3_virulence_genes.tsv")
# Read results
ncbi_dt <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_virulence_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(ncbi_dt) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
ncbi_dt <- merge.data.frame(x = ncbi_dt, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
ncbi_dt <- ncbi_dt %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
ncbi_dt <- ncbi_dt[with(ncbi_dt, order(-ID)), ] %>%
arrange(Strain, Protein)
# Load datatable
datatable(ncbi_dt,
filter = 'top',
caption = 'Alinhamento dos genes de virulência da cepa KpV3 contra os genomas de cepas hospitalares',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read results
df <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_plasmids_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(df) <- c("Strain", "Contig", "Protein", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Merge
df <- merge.data.frame(x = df, y = genes, by.x = "Protein", by.y = "Protein.identifier")
# Sort results
df <- df %>%
select(Strain, Contig, Protein, Gene.symbol, ID, Length, Mismatch, Gapopen, qstart, qend, sstart, send, evalue, bitscore)
df <- df[with(df, order(-ID)), ] %>%
arrange(Strain, Protein)
# Load datatable
datatable(df,
filter = 'top',
caption = 'Alinhamento dos plasmídeos da cepa KpV3 contra os genomas de cepas hospitalares',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read results
df <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_plasmids_genes_against_nosocomial_strains.txt", comment.char = "#")
View(df)
# Read results
df <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_plasmids_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(df) <- c("Strain", "Contig", "Plasmid", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Sort results
df <- df[with(df, order(-ID)), ] %>%
arrange(Strain, Plasmid)
# Read results
df <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_plasmids_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(df) <- c("Strain", "Contig", "Plasmid", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
# Sort results
df <- df[with(df, order(-ID)), ] %>%
arrange(Strain, Plasmid)
View(df)
# Read results
df <- read.csv(sep = "\t", header = FALSE, file = "docs/blasts_plasmids_genes_against_nosocomial_strains.txt", comment.char = "#")
colnames(df) <- c("Strain", "Contig", "Plasmid", "ID", "Length", "Mismatch", "Gapopen", "qstart", "qend", "qlen", "sstart", "send", "slen", "evalue", "bitscore", "qcovs")
# Sort results
df <- df[with(df, order(-ID)), ] %>%
arrange(Strain, Plasmid)
# Load datatable
datatable(df,
filter = 'top',
caption = 'Alinhamento dos plasmídeos da cepa KpV3 contra os genomas de cepas hospitalares',
options = dt_opt_lst,
extensions = 'Buttons',
rownames = F)
# Read results
df <- read.csv(sep = "\t", header = TRUE, file = "docs/Plasmids/all_refseeker_results.txt", comment.char = "#")
# Load datatable
datatable(df,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa RefSeeker',
options = list(pageLength = 6,
dom='flrtBip',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = TRUE),
extensions = 'Buttons',
rownames = F)
# Read results
df <- read.csv(sep = "\t", header = TRUE, file = "docs/Plasmids/all_refseeker_results.txt", comment.char = "#")
# Load datatable
datatable(df,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa RefSeeker',
options = list(pageLength = 6,
dom='flrtBip',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = TRUE),
extensions = 'Buttons',
rownames = F)
# Read results
df <- read.csv(sep = "\t", header = TRUE, file = "docs/Plasmids/all_refseeker_results.txt", comment.char = "#")
colnames(df) <- c("contig", "ID", "Mash Distance", "ANI", "Con. DNA", "Taxonomy ID", "Assembly Status",	"Organism")
# Load datatable
datatable(df,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa RefSeeker',
options = list(pageLength = 6,
dom='flrtBip',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = TRUE),
extensions = 'Buttons',
rownames = F)
# Read results
df <- read.csv(sep = "\t", header = TRUE, file = "docs/Plasmids/all_refseeker_results.txt", comment.char = "#")
colnames(df) <- c("contig", "ID", "Mash Distance", "ANI", "Con. DNA", "Taxonomy ID", "Assembly Status Organism")
# Load datatable
datatable(df,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa RefSeeker',
options = list(pageLength = 6,
dom='flrtBip',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = TRUE),
extensions = 'Buttons',
rownames = F)
# Read results
df <- read.csv(sep = "\t", header = TRUE, file = "docs/Plasmids/all_refseeker_results.txt", comment.char = "#")
colnames(df) <- c("contig", "ID", "Mash Distance", "ANI", "Con. DNA", "Assembly Status", "Organism")
# Load datatable
datatable(df,
filter = 'top',
caption = 'Detecção de plasmídeos com o programa RefSeeker',
options = list(pageLength = 6,
dom='flrtBip',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = TRUE),
extensions = 'Buttons',
rownames = F)
# Read results
df <- read.csv(sep = "\t", header = TRUE, file = "docs/Plasmids/all_refseeker_results.txt", comment.char = "#")
colnames(df) <- c("contig", "ID", "Mash Distance", "ANI", "Con. DNA", "Taxonomy ID", "Organism", "Assembly Status")
# Load datatable
datatable(df %>%
select(-6),
filter = 'top',
caption = 'Detecção de plasmídeos com o programa RefSeeker',
options = list(pageLength = 6,
dom='flrtBip',
buttons = c('copy', 'csv', 'excel'),
scrollX = TRUE,
fixedColumns = TRUE),
extensions = 'Buttons',
rownames = F)
package_version(ggtree)
package_version("ggtree")
packageVersion(ggtree)
packageVersion("ggtree")
packageVersion("ggplot2")
packageVersion("rentrez")
packageVersion("XML")
packageVersion("RColorBrewer")
packageVersion("phangorn")
packageVersion("ape")
packageVersion("dplyr")
packageVersion("rlist")
packageVersion("Polychrome")
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(shiny))
suppressMessages(library(shinyFiles))
suppressMessages(library(shinythemes))
suppressMessages(library(dplyr))
suppressMessages(library(dbplyr))
suppressMessages(library(RSQLite))
suppressMessages(library(DT))
source("shiny_parser_func.R")
# Add directory of static resources to Shiny's web server
addResourcePath(prefix = "jbrowse", directoryPath = "/work/jbrowse/")
# Contigs
unique(sort(openTable()[,1]))[!unique(sort(openTable()[,1])) %in% as.list(input$contigs)]
a=sample(1:10)
a
b=c(3, 6)
a[!a %in% b]
ls
length(a)
length(a) > 0
a=list("prodigal", "prodigal,PHAST", "CARD,ICEberg")
a
strsplit(a, ",", fixed = TRUE)
sapply(a, function(x) { strsplit(x, ",", fixed = T) })
unlist(sapply(a, function(x) { strsplit(x, ",", fixed = T) }))
unlist(sapply(a, function(x) { strsplit(x, ",", fixed = T) })) %>% sort()
unlist(sapply(a, function(x) { strsplit(x, ",", fixed = T) })) %>% sort() %>% as.list()
unlist(sapply(a, function(x) { strsplit(x, ",", fixed = T) })) %>% sort() %>% as.list() %>% unique()
suppressMessages(library(stringr))
setwd("/Volumes/falmeida1TB/Git_Repos/bacannot/docker/scripts/rscripts")
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(shiny))
suppressMessages(library(shinyFiles))
suppressMessages(library(shinythemes))
suppressMessages(library(dplyr))
suppressMessages(library(stringr))
suppressMessages(library(dbplyr))
suppressMessages(library(RSQLite))
suppressMessages(library(DT))
source("shiny_parser_func.R")
# Add directory of static resources to Shiny's web server
addResourcePath(prefix = "jbrowse", directoryPath = "/work/jbrowse/")
as.integer(0)
10 < Inf
10 > Inf
Inf
90ˆ6
90^6
90^6 > Inf
90^6 < Inf
