FROM fmalmeida/bacannot:main_tools

#######################################
### Download up-to-date databases   ###
### this image will be updated each ###
### month with the Github-actions   ###
#######################################
WORKDIR /work/dbs

# Platon DB
RUN mkdir -p /work/platon && \
		wget -O /work/platon/db.tar.gz "https://zenodo.org/record/4066768/files/db.tar.gz"

# Resfinder databases
RUN cd /work/resfinder && \
		git clone https://git@bitbucket.org/genomicepidemiology/resfinder_db.git db_resfinder && \
		git clone https://git@bitbucket.org/genomicepidemiology/pointfinder_db.git db_pointfinder
RUN cd /work/resfinder/db_resfinder && \
			source activate Resfinder && \
			python3 INSTALL.py $(which kma_index) non_interactive && \
			cd ../db_pointfinder && \
			python3 INSTALL.py $(which kma_index) non_interactive

# Plasmidfinder database
RUN source activate PLASMIDFINDER && \
		download-db.sh

# CARD-RGI database
RUN wget https://card.mcmaster.ca/latest/data && \
		tar -xvf data ./card.json && \
		rm data && \
		source activate RGI && \
		rgi load --card_json ./card.json

# AMRFinderPlus database
RUN source activate AMRFINDERPLUS && \
		amrfinder --force_update

# Update prokka database with PGAP hmm
RUN wget https://ftp.ncbi.nlm.nih.gov/hmm/TIGRFAMs/release_15.0/TIGRFAMs_15.0_HMM.LIB.gz
RUN gzip -d TIGRFAMs_15.0_HMM.LIB.gz && \
		mv TIGRFAMs_15.0_HMM.LIB TIGRFAMs_15.hmm && \
		mv TIGRFAMs_15.hmm /miniconda/envs/PROKKA/db/hmm/
RUN source activate PROKKA && \
		prokka --setupdb

# Phigaro database
RUN (echo -e "\n" ; echo -e "\n" ; echo "N" ; echo "N") | phigaro-setup --pvog /work/phigaro_pvog -c /work/phigaro_config.yml --no-updatedb && \
		chmod a+rw -R /work/phigaro_pvog

#######################
### BLAST databases ###
#######################

## VFDB nt
RUN mkdir vfdb && \
		wget http://www.mgc.ac.cn/VFs/Down/VFDB_setA_nt.fas.gz && \
		gzip -d VFDB_setA_nt.fas.gz && \
		awk -v db=VFDB '/>/{ split($0,name," "); split($0,id," \\["); all=$0; $0=">" db "~~~" name[2] "~~~" name[1] "~~~[" id[2] " " all }1' VFDB_setA_nt.fas | \
		sed -e 's/~>/~/g' -e 's/ ~/~/g' -e 's/]~/~/g' -e 's/ >/ /' | \
		awk -F "]" ' { if ($0 ~ />/) { gsub(" ", "_", $1); print $1 "] " $2 "]"} else { print $0 }}' > vfdb/sequences && \
		makeblastdb -in vfdb/sequences -title 'vfdb' -dbtype nucl -logfile /dev/null && \
		rm VFDB_setA_nt.fas

## ARGMiner prot
RUN mkdir ARGMiner && \
		wget http://bench.cs.vt.edu/ftp/argminer/release/ARGminer-v1.1.1.A.fasta && \
		awk -v db=ARGMiner '/>/{ split($0,a,"|"); $0=">" db "~~~" a[3] "~~~" a[1] "~~~" a[2] " " a[4] }1' ARGminer-v1.1.1.A.fasta | \
		sed -e 's/~>/~/g' -e 's/gi:.*:ref://g' -e 's/gi:.*:gb://g' -e 's/gi:.*:emb://g' -e 's/:~/~/g' > ARGMiner/sequences && \
		rm ARGminer-v1.1.1.A.fasta && \
		makeblastdb -in ARGMiner/sequences -title 'argminer' -dbtype prot -logfile /dev/null && \
		diamond makedb --in ARGMiner/sequences -d ARGMiner/diamond


## ICEberg nt (ICEs)
RUN mkdir iceberg && \
		wget https://bioinfo-mml.sjtu.edu.cn/ICEberg2/download/ICEberg_seq_experimental_data.fas && \
		awk -v db=ICEberg '/>/{ split($0,a,"|"); all=$0; $0=">" db "~~~" "ICE_" a[2] "~~~" a[5] "~~~" a[3] " " all }1' ICEberg_seq_experimental_data.fas | \
		sed -e 's/ >/ /g' > iceberg/sequences && \
		rm ICEberg_seq_experimental_data.fas && \
		makeblastdb -in iceberg/sequences -title 'iceberg' -dbtype nucl -logfile /dev/null

## ICEberg prot (genes)
RUN wget https://bioinfo-mml.sjtu.edu.cn/ICEberg2/download/ICEberg_aa_experimental_data.fas && \
		awk -v db=ICEberg \
		'/>/{ split($0,col," "); split(col[1],a,"[|]"); split(col[2],b,"[|]"); split($0,c,"[|]"); all=$0; $0=">" db "~~~" "ICE_" a[2] "~~~" b[4] "~~~" c[6] " " all }1' \
		ICEberg_aa_experimental_data.fas | sed -e 's/ >/ /g' | awk -F '\\]' \
		'{ if ($0 ~ />/) { gsub(" ","_",$1); gsub("_\\[","_",$1); gsub("~_","~",$1); print $1,$2 "]" } else { print $0 }}' > iceberg/proteins && \
		diamond makedb --in iceberg/proteins -d iceberg/diamond && \
		makeblastdb -in iceberg/proteins -title 'iceberg' -dbtype prot -logfile /dev/null && \
		rm ICEberg_aa_experimental_data.fas

##  VICTORS prot (genes)
RUN mkdir victors && \
		wget -O victors_original.fasta "http://www.phidias.us/victors/downloads/gen_downloads_protein.php" && \
		grep -v "^[^>M]" victors_original.fasta > victors_prot.fasta && \
		rm victors_original.fasta && \
		awk -v db=victors '/>/{ split($0,a,"|"); split(a[5],gene," \\["); all=$0; $0=">" db "~~~" gene[1] "~~~" a[4] "~~~" "Victors_" a[2] " " all }1' victors_prot.fasta | \
		sed -e 's/ >/ /g' -e 's/~ /~/g' | \
		awk -F "~~~" ' { if ($0 ~ />/) { gsub(" ", "_", $2); print $1 "~~~" $2 "~~~" $3 "~~~" $4 } else { print $0 }}' > victors/sequences && \
		diamond makedb --in victors/sequences -d victors/diamond && \
		makeblastdb -in victors/sequences -title 'victors' -dbtype prot -logfile /dev/null && \
		rm victors_prot.fasta

## PHAST prot (genes)
RUN mkdir phast && \
		wget -O phast_prot.fasta http://phaster.ca/downloads/prophage_virus.db && \
		awk -v db=phast '/>/{ split($0,a,"|"); split(a[5],gene," \\["); all=$0; $0=">" db "~~~" gene[1] "~~~" a[4]"~~~" "PHAST_" a[2] " " all }1' phast_prot.fasta | \
		sed -e 's/ >/ /g' -e 's/~ /~/g' | \
		awk -F "~~~" ' { if ($0 ~ />/) { gsub(" ", "_", $2); print $1 "~~~" $2 "~~~" $3 "~~~" $4 } else { print $0 }}' | \
		awk -F "~~~" ' { if ($0 ~ />/) { gsub("-", "_", $2); print $1 "~~~" $2 "~~~" $3 "~~~" $4 } else { print $0 }}' > phast/sequences && \
		rm phast_prot.fasta && \
		diamond makedb --in phast/sequences -d phast/diamond && \
		makeblastdb -in phast/sequences -title 'phast' -dbtype prot -logfile /dev/null

# Fix permissions
RUN chmod -R a+rwx /usr/local/lib/python3.8/
RUN chmod -R a+rwx /miniconda/envs/RGI/lib/python3.6/
RUN chmod -R a+rwx /work
ENV MPLCONFIGDIR="/tmp/"

# Clean
RUN conda clean -afy \
		#&& rm diamond_manual.pdf *.tar.gz '=1.14' \
		&& find /miniconda/ -follow -type f -name '*.a' -delete \
		&& find /miniconda/ -follow -type f -name '*.pyc' -delete \
		&& find /miniconda/ -follow -type f -name '*.js.map' -delete

# Set Workdir
WORKDIR /work
