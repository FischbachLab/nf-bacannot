/*

                    Loading input file. Must be a single fasta file containing the genome's contigs.
                    Full path to the file must be given

*/
params.genome = 'assembly.fasta'
params.prokka_center = 'UNB' // center name to use to name contigs
params.prokka_kingdom = 'Bacteria' // Annotation mode: Archaea|Bacteria|Mitochondria|Viruses (default 'Bacteria')
params.prokka_genetic.code = 11 // Must be set if the above is set.
params.prokka_use_rnammer = false // false or true to use rnammer instead of Barrnap
params.prokka_genus = '' // Set only if you want to search only a specific genus database
params.outDir = 'EXAMPLE' //Output folder name

/*

  Prefix for output files (It is recommended to use names related to bacterial strain's or characteristics such as:
  'resistant_klebsiella' ; 'Ecoli_K12'; etc.). However it must never be written with white spaces!!

*/
params.prefix = 'Example'

// Number of threads to be used
params.threads = 2

// Number of minimum overlapping base pairs required for merging
// Negative values means required overlapping base pairs. Positive values means maximum distance accepted for merging.
params.bedtools_merge_distance = -20

/*
              DIAMOND parameters used to annotated the genome using the specific databases
              loaded in the docker image (VFDB, Victors, ICEberg and PHAST)
              Resistance and Virulence genes are searched with blastx while ICEs and Phages
              are searched with blastn.

*/
params.diamond_virulence_identity = 90 // For Virulence Genes
params.diamond_virulence_queryCoverage = 90 // Filters blast based on query coverage. For Virulence Genes.
params.diamond_MGEs_identity = 85 // For ICEs and Phages.
params.diamond_MGEs_queryCoverage = 85 // Filters blast based on query coverage. For ICEs and Phages.
params.diamond_minimum_alignment_length = 200

/*

                    Options to set, or not, additional databases search
                    Note that generics one as 'virulence' they block the
                    execution of specific ones such as vfdb, even if it set to true.
                    params.not_run_*_search == 'false' means it will be executed

*/

params.not_run_virulence_search = false
params.not_run_vfdb_search = false
params.not_run_victors_search = false
params.not_run_resistance_search = false
params.not_run_iceberg_search = false
params.not_run_prophage_search = false
params.not_run_kofamscan = false

/*

                  Necessary files for calling methylation using nanopolish call-methylation algorithm.
                  This results will be readly plot in JBROWSE browser. Here we need Nanopore raw reads
                  and its fastq. This step is extremely time consuming. If you desire fast results it
                  is advised to skip this process and execute it later since it is not a difficult proccess.

                  To skip it one just need to left its variables blank.

*/
params.fast5_dir = ''
params.fastq_reads = ''

/*
                          Configuring Nextflow Scopes.
                          Do NOT change any of the following

*/

//Queue limit
executor.$local.queueSize = 1

//Trace Report
trace {
    enabled = true
    file = "${params.outDir}" + "/annotation_pipeline_trace.txt"
    fields = 'task_id,name,status,exit,realtime,cpus,%cpu,memory,%mem,rss'
}

//Docker usage
docker {
  enabled = true
  runOptions = '-u $(id -u):root'
}

//Timeline Report
timeline {
    enabled = true
    file = "${params.outDir}" + "/annotation_pipeline_timeline.html"
}

//Complete Report
report {
    enabled = true
    file = "${params.outDir}" + "/annotation_pipeline_nextflow_report.html"
}
